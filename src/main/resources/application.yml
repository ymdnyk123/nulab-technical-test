spring:
  datasource:
    url: jdbc:postgresql://XXXX.compute-1.amazonaws.com:5432/XXXX?sslmode=require
    username: XXXX
    password: XXXX
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          backlog:
            #********************************************************************************
            # local
            #********************************************************************************
            clientId: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
            clientSecret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
            redirectUri: http://localhost:8080/login/oauth2/code/backlog
            #********************************************************************************
            # heroku            
            #********************************************************************************
#            clientId: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#            clientSecret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#            redirectUri: https://issues-actual-register.herokuapp.com/login/oauth2/code/backlog
            #********************************************************************************
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: backlog
        provider:
          backlog:
            authorizationUri: https://nulab-exam.backlog.jp/OAuth2AccessRequest.action
            tokenUri: https://nulab-exam.backlog.jp/api/v2/oauth2/token
            userInfoUri: https://nulab-exam.backlog.jp/api/v2/users/myself 
            user-info-authentication-method: GET
            user-name-attribute: name
#logging:
#  level:
#    '[org.springframework.security]': debug
